!Compile
; <-- Sets the Players formatted ActorGlobal
Function PushGlobal(Player%, GblNumber%, SlotNumber%, Value$, Divider$, MaxSlots%)

    If Divider$ =""
        Divider$ = ","
    EndIf
    AG$ = ActorGlobal(Player%, GblNumber%)
    For i = 1 To MaxSlots%
        Junk$ = Split(AG$, i, Divider$)
        If i = SlotNumber% Then
            Junk$ = Value$
        EndIf
        NewValue$ = NewValue$ + Junk$ + Divider$
    Next
    NewValue$ = Left(NewValue$, Len(NewValue$) - 1)
    SetActorGlobal(Player%, GblNumber%, NewValue$)
    Return

End Function

; <-- Reads the Players formatted ActorGlobal and returns the data located in SlotNumber%
Function PullGlobal$(Player%, GblNumber%, SlotNumber%, Divider$)
    If Divider$ =""
        Divider$ = ","
    EndIf
    Return(Split(ActorGlobal(Player%, GblNumber%), SlotNumber%, Divider$))

End Function

; <-- Find slot number in formatted string where value$ resides
Function GetSlotFromString%(InString$, Value$, Divider$)

    If Divider$ =""
        Divider$ = ","
    EndIf
    Junk$ = ""
    Repeat
        Counter = Counter + 1
        Junk$ = Split(InString$, Counter, Divider$)
        If Junk$ = Value$ Then
            Return(Counter)
        EndIf
    Until Counter > 60
    Return(0)

End Function

; <-- Pull certain location of data from a formatted string and return result
Function GetStringFromString$(InString$, SlotNumber%, Divider$)

    If Divider$ =""
        Divider$ = ","
    EndIf
    Return(Split(InString$, SlotNumber%, Divider$))

End Function

; <-- Add data to a formatted string at a certain location and return result
Function PushSlot$(StrngToInsertInTo$, SlotNumber%, DataToPush$, Divider$, MaxSlots%)

    If Divider$ =""
        Divider$ = ","
    EndIf
    For i = 1 To MaxSlots%
        Junk$ = Split(StrngToInsertInTo$, i, Divider$)
        If i = SlotNumber% Then
            Junk$ = DataToPush$
        EndIf
        NewValue$ = NewValue$ + Junk$ + Divider$
    Next
    NewValue$ = Left(NewValue$, Len(NewValue$) - 1)
    Return(NewValue$)

End Function