<html>
<head>
<title>BlitzForge Docs</title>
<link rel=stylesheet href=../css/commands.css type=text/css>
</head>
<body>
<h1>Ptr</h1>
<h1>Parameters</h1>
<table>
<tr>
<td>
Variable or value
</td>
</tr>
</table>
<h1>Description</h1>
<table>
<tr>
<td>
Use this command to convert a variable or value to a pointer. This is useful with code that must perform low level interaction with the operating system and/or speed sensitive code. The result is returned as a BBPointer internal type which can be cast to an Integer or String which will be the address value of the pointed at data. The pointer can be cast back to the original type.
<br>
The pointer variable type can be denoted with .BBPointer or using the @ symbol as shorthand.
<br>
<br>
Pointers are not recommended for general use, as misuse of pointers can easily result in memory corruption causing all sorts of bugs and headaches!
<br>
Pointers cannot point to integer variables. Casting an integer to a pointer will point to the memory address the integer value represents. This is not the same as a pointer to an integer variable itself.
<br>
</td>
</tr>
</table>
<h1><a href=../2d_examples/Ptr.bb>Example</a></h1>
<table>
<tr>
<td>
; PTR example
<br>
Global bank.BBBank = CreateBank( 4 ) <br>
Global bank_ptr_1.BBPointer = Ptr bank <br>
Global bank_ptr_2@ = Ptr bank <br>
Global bank_ptr_3@ = bank_ptr_1<br>
<br>
Function AreBanksEqual()<br>
	Return BankSize(bank) = BankSize(bank_ptr_1) And BankSize(bank) = BankSize(bank_ptr_2) And BankSize(bank) = BankSize(bank_ptr_3)<br>
End Function<br>
<br>
Local all_banks_equal = AreBanksEqual()<br>
<br>
ResizeBank bank, 8 <br>
Local all_banks_equal_after_resize = AreBanksEqual()<br>
<br>
ResizeBank bank_ptr_1, 16 <br>
Local all_banks_equal_after_resize_1 = AreBanksEqual()<br>
<br>
ResizeBank bank_ptr_2, 32 <br>
Local all_banks_equal_after_resize_2 = AreBanksEqual()<br>
<br>
ResizeBank bank_ptr_3, 64 <br>
Local all_banks_equal_after_resize_3 = AreBanksEqual()<br>
<br>
Print "All banks are equal before resize: " + all_banks_equal <br>
Print "All banks are equal after resize: " + all_banks_equal_after_resize <br>
Print "All banks are equal after resize 1: " + all_banks_equal_after_resize_1 <br>
Print "All banks are equal after resize 2: " + all_banks_equal_after_resize_2 <br>
Print "All banks are equal after resize 3: " + all_banks_equal_after_resize_3<br>
<br>
WaitKey<br>
End<br>
</td>
</tr>
</table>
<br>
<a target=_top href=../index.htm>Index</a><br>
<br>
</body>
</html>
